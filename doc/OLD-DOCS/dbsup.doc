/* ************************************************************************
*  Copyright (C) 1990, 1991 - see 'license.doc' for complete information. *
************************************************************************* */

                   DATABASE SUPPLEMENTAL DOCUMENTATION
                            "dbsup.doc"


World File field description:
=============================

Main structure notes:
---------------------

#<virtual number> is:
  A number for the given room. No two rooms may have the same number.
  The <virtual number> must always increase when browsing down the 
  world file (but increments can be larger than one).

<name>~<NL>:
  This name is the "title" of the room. This title is also used in special
  procedures like:
    "exits"
    "brief mode"

<description>~<NL>:
  This is the general description of the room.

<zone nr> is:
  The number of the zone in which this room is located. This number is used
  for resetting zones and monster zone movement. See the zone file.

<room_flags> are:
  A bitvector consisting of the room conditions as:

  DARK           a  Light must be used to see anything.
  DEATH          b  A player 'dies' (no xp lost) when entering.
                    It is a good idea to:
                     *Have these rooms light, because then EXITS will show
                      the room title, for example "In Boiling Water".
                     *Make exits to all rooms from which one can enter the
                      death_room, then the "death cry" will be heard by
                      other members of the group considering following...
  NO_MOB         c  No monsters may walk around in here
  INDOORS        d  This is inside (a house,cave or dungeon for example)
  PEACEFUL       e  Violent acts and spells will be supressed.
  SOUNDPROOF	 f  No communications take place into/out of room.
  !TRACK         g  Track doesn't work through this room.
  NO_MAGIC       h  Mages/Clerics cannot cast spells.
  TUNNEL         i  Only one char. at a time in room.
  PRIVATE        j  It is impossible to teleport to this room if it
                    already contains two characters.  The 'teleport'
		    spell will never teleport a player into this room.
  GODROOM        k  Super-private room: Immortals can not 'goto' this room.
            (l - p) DO NOT USE!!!!!
  NO_PSIONICS    q  Psychic abilities are useless.
  NO_SCIENCE     r  Physics cannot alter reality here.
  NO_RECALL      s  Recall spell cannot be used...
  CLAN_ROOM      t  Is a clan room
  ARENA		 u  
  DOCK	         v
  FLAME FILLED   w  Will set characters on fire if unprotected


<sector_type> is:
  This determines how many movement points are used when moving through
  a location of the type - use one of the numbers 0..7 (they are NOT the
  movement-points used - merely indexes to a lookup-table):

  SECT_INSIDE          0  Uses as if walking indoors
  SECT_CITY            1  Uses as if walking in a city
  SECT_FIELD           2  Uses as if walking in a field
  SECT_FOREST          3  Uses as if walking in a forest
  SECT_HILLS           4  Uses as if walking in hills
  SECT_MOUNTAIN        5  Uses as if climbing in mountains
  SECT_WATER_SWIM      6  Uses as if swimming
  SECT_WATER_NOSWIM    7  Impossible to swim water - requires a boat
  SECT_UNDERWATER      8  Underwater--need SCUBA or WATERBEATH
  SECT_FLYING          9  Requires POS_FLYING to enter
  SECT_NOTIME         10  Between times..Requires TIME_WARP to enter
  SECT_CLIMBING       11  Requires CLIMBING skills, or PITONS
  SECT_FREESPACE      12  Outer Space...Requires SPACE_SUIT
  SECT_ROAD	      13  On the road.
  SECT_VEHICLE	      14  Inside a car.
  SECT_CORNFIELD      15  ...
  SECT_SWAMP	      16  A marshy swamp.
  SECT_DESERT         17  Thirst becomes an important factor here...

Direction fields:
-----------------

<Exit number> is one of:
  0 = North
  1 = East
  2 = South
  3 = West
  4 = Up
  5 = Down
  6 = Forward   ( in time )...link forward to SECT_NOTIME
  7 = Backward     * similar *

<general description><NL>~<NL>:
  What a player will see if he types 'look <direction>'

<keyword list>~<NL>:
  used for commands like 'open', 'close', etc. should be 'door' for ordinary
  doors. Example: An exit from a given room leads through a cupboard. The
  keyword list for this exit might look like this:

  "cupboard door~"


<Door flag> [NL]:

  If <Door Flag> is 1, the exit can be locked/unlocked/opened/closed/picked.
  If it is 2, the exit can only be locked/unlocked/opened/closed.
  If it is 0, these commands won't work. (The exit can still be closed at
  reset, however; maybe to be opened by some special routine, like a concealed
  handle).

  The state of the doors after reset may be controlled by a command in the
  reset-command table (see the zone file). The initial state of a door is
  open.

<Key Number> [NL]:
  The number of the object which can unlock/lock the door (in the direction
  given). If a player carries/holds this object, he can lock/unlock.
  <Key Number> == -1 means no keyhole. If <Door flag> is 0, the value of this
  field is ignored.

<to_room> <NL>:
  The virtual number of the room to which the exit leads. If this number is
  -1 (NOWHERE), the exit doesn't lead anywhere. This might be useful for
  adding an exit-description in a direction which doesn't actually lead
  anywhere.

** Note about doors. You must make a door in both rooms that the door
                     is set between.

Extra descriptions:
-------------------
first put an in an:
E
then
<blank separated keyword list>~<NL> is:
  A list of the keywords that will allow the extra description to be
  displayed. The keywords must must be seperated by blanks.


<description><NL>~<NL>:
  The description that is show when a player types 'look at <keyword>'
  and keyword matches one of the above.

USE THE EXTRA DESCS!!! Players will love you for it!

Example of a room entry is the database:
----------------------------------------

#100
The Lego temple~
   You stand in a tiny, red temple built entirely from Lego bricks. It is,
sadly, not a very interesting place, and perhaps you should leave through
the portal which leads south to a sunny garden.
~
1 12 0
D2
You see the grand portal of the Lego church. Beyond is an inviting garden.
~
portal grand~
1 2 107
E
portal~
The portal is high and arched, built out of lego bricks of the finest quality.
~
E
brick~
The bricks are all in bright different colours.
~
S
#101
.
.
.

Facts about this room is:
  Room number 100
  Zone number 1
	Room Flags  (8+4=12) INDOORS and NO_MOB
  Sector Type Inside (movement loss calc only)
  One exit (D2) to the south with 'look south' description
  Door Flag 1
  Key no.   2
  Leads to room 107
	Extra description for the portal and bricks.

-------------------------------------------------------------------------

Monster fields description:
===========================

#<virtual number><NL> is:
  The monsters virtual number. Rules are same as for room virtual numbers.

<namelist><!NL>~<NL>
  The space-separated name alias list.

<short description><!NL>~<NL>
  This string will be displayed when the monster take action, for example
  if it is "The Beastly Fido", and fido leaves south the message will be
  "The Beastly Fido leaves south."

<long description><NL>~<NL>
  This description is displayed when the monster is in it's "default"
  position. When not in the default position, a message like:
  "<short description> is sleeping here." could be displayed.

<description><NL>~<NL>
  This will be displayed when a player looks at the monster.

<mob_flags>[NL]

  This bitvector define how the monster behave.  The bits mean:

  ACT_SPEC         a  This means that there is a special programmed C
                      procedure connected to the monster. When this bit
                      is set the monster "function pointer" must be
                      assigned in the "spec_assign.c" file.

  ACT_SENTINEL     b  When this bit is set the monster will NOT
                      move around in the world.

  ACT_SCAVENGER    c  When this bit is set, monsters will pick up stuff
                      lying on the ground. It will pick up the most
                      expensive items first.

  ACT_ISNPC        d  RESERVED FOR INTERNAL USE

  ACT_NICE_THIEF   e  When this bit is set, a monster will not attack
                      a thief which has been caught in the act of 
                      stealing from this monster.

  ACT_AGGRESSIVE   f  When this bit is set, the monster will attack and
                      attempt to kill any player it can get it's claws on.
                      It will not attack players it can't see (for example
                      dark rooms or when player is invisible, unless the
                      monster can detect invisibility)

  ACT_STAY_ZONE    g  When this bit is set, the monster will never move
                      into another zone of the world (this is good for
                      keeping your monsters in your own adventure).

  ACT_WIMPY        h  When this bit is set, the monster will flee when it's
                      getting percentwise low on hitpoints.
                      If the monster is both aggressive and wimpy, then it
                      will only attack players that are NOT awake! (ie. also
                      suffering players).

  ACT_AGGRESSIVE_EVIL
		   i  When this bit is set, the monster will attack players
		      with evil alignment.

  ACT_AGGRESSIVE_GOOD
		   j  When this bit is set, the monster will attack players
		      with good alignment.

  ACT_AGGRESSIVE_NEUTRAL
		   k  When this bit is set, the monster will attack players
		      who are neutrally aligned.

  ACT_MEMORY	   l  When this bit is set, the monster will remember
		      players who attack it, and attack the player back
		      if it sees him or her again.

  ACT_HELPER       m  Mob will jump in on pc-npc fights, helping the mob.
  ACT_NOCHARM      n
  ACT_NOSUMMON     o
  ACT_NOSLEEP      p 
  ACT_NOBASH       q
  ACT_NOBLIND      r

<mob2_flags>  This is just like mob_flags. (each slot accepts up to 32 flags)

  MOB2_MOUNT       b    Mob can be mounted and ridden.
  MOB2_STAY_SECT   c    Mob will not leave the SECT_type it's in.(ie underw) 
  MOB2_ATK_MOBS    d	If mob is AGGRO, will attack mobs as well as players
  MOB2_HUNT  	   e	Will HUNT down attackers(you have to set memory, too)
  MOB2_LOOTER      f    Loots any corpses it comes across
  MOB2_NOSTUN      g    Cannot be stunned.
  MOB2_SELLER      h    If is a shopkeeper, will sell at any location.
  MOB2_WONT_WEAR   i    Mob wont wear shit it picks up (SHOPKEEPERS!!!!!!!)
  MOB2_SILENT_HUNTER j  Will not yell stuff while he hunts a victim.

<affection flags>[NL]

  This is a bitvector that indicates what the monster is affected by.
  Puff could for example be able to "detect invisible" or maybe
  "sanctuary" (1/2 damage). A lot of these bits are meant for players
  only (in a context with a spell), and should NOT be used when indicated.
  The bits are:

  AFF_BLIND             a         RESERVED PLAYERS
  AFF_INVISIBLE         b         The monster is invisible
  AFF_DETECT_ALIGN      c
  AFF_DETECT_INVIS      d         (Especially good for aggressive npc's)
  AFF_DETECT_MAGIC      e                          
  AFF_SENCE_LIFE        f         RESERVED PLAYERS
  AFF_WATERWALK         g         Mob can walk on WATER_NOSWIM
  AFF_SANCTUARY         h         The monster has sanctuary (1/2 damage)
  AFF_GROUP             i         RESERVED PLAYERS
  AFF_CURSE             j                          
  AFF_INFRAVISION       k         Mob can see in dark; Eyes glow in dark.
  AFF_POISON            l         RESERVED PLAYERS
  AFF_PROTECT_EVIL      m                       
  AFF_PROTECT_GOOD      n
  AFF_SLEEP             o         RESERVED PLAYERS
  AFF_NOTRACK           p  
  AFF_INFLIGHT          q         Mob can fly (POS_FLYING)
  AFF_TIME_WARP         r         Mob can enter SECT_NOTIME
  AFF_SNEAK             s         The message "The xxx leaves direction" will
                                  not be displayed when the monster moves
                                  out/in to a room.
  AFF_HIDE              t         The monster will be hidden, and can only
                                  be detected by a "sense life" spell
  AFF_WATERBREATH       u         Can go SECT_UNDERWATER
  AFF_CHARM             v         RESERVED PLAYERS
  AFF_CONFUSION         w         Mob cannot cast, or fight well.
  AFF_NOPAIN            x         Mob oblivious to pain.
  AFF_RETINA            y         Can see in dark--Eyes do not glow.
  AFF_ADRENALINE        z         Adrenaline is pumping, fights better.
  AFF_CONFIDENCE        A         
  AFF_REJUVENATION      B         RESERVED PLAYERS
  AFF_REGENERATION      C         HPs return extra fast
  AFF_GLOWLIGHT         D         Mob surrounded by illumination
  AFF_BLUR              E         Mob is blurred. 

<Affection2 Flags>
More affections:
	AFF2_FLOURESCENT	a  	Atoms are flourescing near char
	AFF2_TRANSPARENT	b	Char is transparent
	AFF2_SLOW		c	Char is  s l o w e d.
        AFF2_HASTE	        d	Char is moving FAST!
        AFF2_MOUNTED		e       RESERVED FOR PLAYERS ONLY!!!!
    	AFF2_FIRE_SHIELD	f	Char has a shield of fire.
	AFF2_BESERK		g       Char is beserk...
  	AFF2_INTIMIDATED        h       Char fights badly.
        AFF2_TRUE_SEEING        i       Sees all, knows all...
  	AFF2_HOLY_LIGHT         j       Followed by glow, sim. to glowlight
        AFF2_PROTECT_UNDEAD     k       Undead have a hard time killing char.
        AFF2_INVIS_TO_UDEAD     l	Undead cannot see char
        AFF2_INVIS_TO_ANIMAL    m       Animals cannot see char.
	AFF2_ENDURE_COLD        n       Char endures cold environ. and attacks
        AFF2_PARALYZED          o  
        AFF2_PROT_LIGHTNING     p	Char aint scared o lightning
        AFF2_PROT_FIRE          q	Char aint scared of fire 
        AFF2_TELEKINESIS	r	Char can carry alot.
        AFF2_AUTOEXITS          s       DONT USE on mobs...(items maybe)
        AFF2_ABLAZE             t       Char is on fire...
        AFF2_NECK_PROTECTED     u       Sez it all... no beheads
        AFF2_DISPLACEMENT       v       Char image displ..hard to hit.     

<Affection3 Flags>
More affections:
	NONE DEFINED
	

<Alignment Flag>[NL]

  This is the monsters alignment, read as:
  +1000 .. +350  Good Alignment
   +349 .. -349  Neutral Alignment
   -350 ..-1000 Evil Alignment

<Detailed/Simple flag><NL>

  This flag must be entered as a uppercase "S". S indicates that "Simple"
  monster data follow.  If an 'E' is entered, then the parser will look
  for a list of special attrib assignments after the last numeric line
  of mob data.

<Level>
   This is the level of the monster. See "flags.doc" for guidelines when
   setting the level.

<THAC0>
   The monsters THAC0.
   See the file "flags.doc" for an explanation of armour vs. THAC0, and
   guidelines for THAC0.
   THAC0 is an abbrevation for "To Hit Armour Class Zero".

<AC>
   The monsters armour class. See flags.doc" for guidelines regarding
   armour.

<Hit Points (format is xdy+z)>
   This defines the number of hitpoints a given monster has. If this is
   entered into the file:

   ... ... 3d8+10 ...

   the monster will have 10 hitpoints plus the result of rolling 3 dice
   with 8 side, and adding their sum. All the numbers (even zero), the
   plus sign, and the letter 'd' MUST be entered!!! Example:

   ..... 1d6+0 ....


<Damage (as HP)><NL>
   This is the damage a monster will cause when it is using NO weapons
   (the Bare hand damage). The format is exacly like the one described
   for hit points. A thing to note about damage:
   The number after the plus sign, is the "strength bonus". This bonus
   will apply to any weapons used, and bare hands too. Example:

   ..... 1d4+10

   This monster will damage between 11 and 14 hitpoints each round. If the
   monster picks up and wields a tiny stick which give 1d2 damage, then the
   monster will now damage by : 1d2 + 10 points. 

<Gold>
   The amout of gold carried by the monster.

<Exp>
   The experience this monster has. Follow guidelines in "flags.doc".

<Race> 
   Defines the Monster's Race. Can be one of:
   
   HUMAN         0
   ELF           1
   DWARF         2
   HALF ORC    	 3
   -  NPC races	--
   MOBILE(def)  10
   UNDEAD	11
   HUMANOID 	12
   ANIMAL	13
   DRAGON	14
   GIANT	15
   ORC		16
   GOBLIN	17
   HALFLING	18
   MINOTAUR     19
   TROLL	20
   GOLEM	21
   ELEMENTAL    22
   OGRE		23
   DEVIL        24

<Class>
    Defines the Monster Class.  Helps to specify the type of mob.
    Also calls special actions.
  
    MAGE	0
    CLERIC	1
    THIEF       2
    WARRIOR     3
    BARBARIAN   4
    PSYCHIC     5
    PHYSIC      6
    CYBORG      7
    KNIGHT      8
    RANGER      9
    HOOD	10
    MONK        11
    - NPC classes-
    NORMAL	50
    BIRD        51
    PREDATOR    52
    SNAKE	53
    --
    SKELETON	60 
    GHOUL	61 		EARTH EL.  81	
    SHADOW      62		FIRE ELE.  82
    WIGHT     	63		WATER EL.  83
    WRAITH      64		AIR ELEM.  84
    MUMMY	65
    SPECTRE	66		GREEN DR.  91
    VAMPIRE     67
    GHOST	68	
    LICH	69 		Hill Giant 	111
   -----			Stone Giant	112
    LEAST	101		Frost Giant	113	
    LESSER	102		Fire Giant   	114
    GREATER     103		Cloud Giant	115
    DUKE	104        	Storm Giant	116
    ARCH        105
                        
<position>
   This defines the monster's position when loaded into the game.
   A position is one of:

   POSITION_DEAD       0  DO NOT USE
   POSITION_MORTALLYW  1  DO NOT USE
   POSITION_INCAP      2  DO NOT USE
   POSITION_STUNNED    3  DO NOT USE
   POSITION_SLEEPING   4  The monster is sleeping.
   POSITION_RESTING    5  The monster is resting.
   POSITION_SITTING    6  The monster is sitting.
   POSITION_FIGHTING   7  DO NOT USE.
   POSITION_STANDING   8  The monster is standing.
   POSITION_FLYING     9  Monster is flying in the air.
   POSITION_MOUNTED   10
   POSITION_SWIMMING  11  


<default position>
   This is the position into which the monster will return after
   a fight. This position also defines when the <long description>
   is displayed - see above.

<sex>
   This is the monsters sex, on of:

   SEX_NEUTRAL   0
   SEX_MALE      1
   SEX_FEMALE    2

[attack type]<NL>
   How the monster attacks, without a weapon.  Can be one of:

   HIT		0
   STING	1
   WHIP		2
   SLASH	3
   BITE		4
   BLUDGEON	5
   CRUSH	6
   POUND	7
   CLAW		8
   MAUL		9
   THRASH	10
   PIERCE	11
   BLAST	12
   PUNCH	13
   STAB		14
   RIP          16
   CHOP         17
   
   No further explanation is needed (hopefully).


Object fields description:
==========================

#<virtual number><NL>
   See rules for rooms above.

<namelist>~<NL>:
   Same as for monsters above.

<short description>~<NL>
   This string will be displayed when the object is used. For example
   if it is "a rubber raft", and a player drops it, then a message like:
   "Monthy drops a rubber raft."
   could be displayed.

<long description>~<NL>
   This description is displayed when the object is lying on the ground.
   For example, if it is "A furled umbrella lies here.~" then this message
   is displayed when the umbrella is lying on the ground.

<action description>~<NL>
   Do not use.

<type flag>[NL]
   This defines what kind of item you are defining, it can be one of:

   ITEM_LIGHT      1  Item is a light.
   ITEM_SCROLL     2  
   ITEM_WAND       3 
   ITEM_STAFF      4
   ITEM_WEAPON     5  Item is a weapon
   ITEM_FIREWEAPON 6  Not yet implemented
   ITEM_MISSILE    7  Not yet implemented
   ITEM_TREASURE   8  Item is a treasure (not money)
   ITEM_ARMOR      9  Item is armour.
   ITEM_POTION    10  
   ITEM_WORN      11  
   ITEM_OTHER     12  Item is other
   ITEM_TRASH     13  Item is trash
   ITEM_TRAP      14  Not yet implemented
   ITEM_CONTAINER 15  Item is a container
   ITEM_NOTE      16  Item is a note that can be written upon (with a pen)
   ITEM_DRINKCON  17  Item is a drink container, for example a bottle or
                      a barrel or a wine-skin.
                      A drinkcontainer whit contents must *always* have
                      two names: 1. The name of the drink, 2. the name
                      of the container, example:
                       tea cup~
   ITEM_KEY       18  Item is a key
   ITEM_FOOD      19  Item is food.
   ITEM_MONEY     20  Item is money.
   ITEM_PEN       21  Item is a pen.
   ITEM_BOAT      22  Item is a boat, which must be carried by a player if
                      the player wishes to enter NOSWIM room sector types.
   ITEM_FOUNTAIN  23  Item is a fountain (characters can drink from it
		      without having it in inventory).
   ITEM_WINGS     24  When worn, allows player to fly.
   ITEM_TIME_WARP 25  Worn, allows players to time warp.
   ITEM_SCUBA     26  Self Contained Underwater Breathing Apparatus.
   ITEM_PITONS    27  Helps a player climb.
   ITEM_SPACESUIT 28  well,...
   ITEM_HOLY_SYMB 29  Holy Symbol.  see values.doc
   ITEM_VEHICLE   30  Car object.  see values.doc
   ITEM_ENGINE    31  ditto
   ITEM_BATTERY   32  Can recharge from it.  May or may not cost.
   ITEM_RAY_GUN   33  Energy weapon.
   ITEM_WINDOW    34  Look through to another, specified room.
   ITEM_PORTAL    35  Enter this to be transed to specified rooom.
   ITEM_TOBACCO   36  Can be rolled or put in pipe.
   ITEM_CIGARETTE 37  Smoke.
   ITEM_METAL     38  Raw material. 
  

<extra flag>[NL]
   This bitvector defines mostly special effects:

   ITEM_GLOW            a  The item is glowing.
   ITEM_HUM             b  The item is "humming"/"buzzing".
   ITEM_NORENT		c
   ITEM_NODONATE	d
   ITEM_NOINVIS      	e
   ITEM_INVISIBLE	f
   ITEM_MAGIC		g
   ITEM_NODROP		h
   ITEM_BLESS		i
   ITEM_!GOOD		j
   ITEM_!EVIL		k
   ITEM_!NEUTRAL	l
   ITEM_!MAGE		m
   ITEM_!CLERIC		n
   ITEM_!THIEF		o
   ITEM_!WARRIOR    	p
   ITEM_NOSELL		q
   ITEM_!BARB		r
   ITEM_!SYK		s
   ITEM_!PHY		t
   ITEM_!CYB		u
   ITEM_!KNI		v
   ITEM_!RANGER		w
   ITEM_!HOOD		x
   ITEM_!MONK  		y
   ITEM_BLURRED		z
   ITEM_!DISPEL_MAGIC  	A
   ITEM_ATTRACT_FILED   B
   ITEM_REPULSE_FIELD	C
   ITEM_TRANSPARENT	D

<item2 flags>
Like the item flags.

   ITEM2_V_ATV		a	}   Choose one of these
   ITEM2_V_ROADCAR	b	}   flags for any vehicle
   ITEM2_V_SKYCAR	c	}   you design.  These 
   ITEM2_V_BOAT		d	}   flags define WHERE you
   ITEM2_V_SPACESHIP    e	}   can drive the vehicle.
   ITEM2_CAST_WEAPON    k	Weapon casts spells (see value.doc)
   ITEM2_TWO_HANDED     l	No shield can be used.
                       m-n      RESERVED.

<wear flag><NL>
   This bitvector defines if items can be taken, and if they can be worn:

   ITEM_TAKE              a Item is takeable.
   ITEM_WEAR_FINGER       b Can be worn on a finger (rings usually)
   ITEM_WEAR_NECK         c Can be worn around neck.
   ITEM_WEAR_BODY         d Can be worn on body.
   ITEM_WEAR_HEAD         e Can be worn on head.
   ITEM_WEAR_LEGS         f Can be worn on legs.
   ITEM_WEAR_FEET         g Can be worn on feet
   ITEM_WEAR_HANDS        h Can be worn on hands (gauntlets, etc)
   ITEM_WEAR_ARMS         i Can be worn on arms.
   ITEM_WEAR_SHIELD       j Can be used as a shield.
   ITEM_WEAR_ABOUT        k ???
   ITEM_WEAR_WAISTE       l Can be worn around the waiste (belt)
   ITEM_WEAR_WRIST        m Can be worn on wrist (bracelets)
   ITEM_WIELD             n Can be wielded and used as a weapon
   ITEM_HOLD              o Item can be held in a hand.
   ITEM_WEAR_CROTCH	  p
   ITEM_WEAR_EYES	  q
   ITEM_WEAR_BACK	  r
   ITEM_WEAR_BELT	  s Worn ON a belt...
   ITEM_WEAR_FACE	  t worn on face
   ITEM_WEAR_EARS	  u Earrings


<value 0> <value 1> <value 2> <value 3> <NL>
   These values are very central. They define the ability of items based on
   the items <Item Type>. These values are defined in "values.doc". Note that
   if you define an item as being anything but a weapon, you shouldn't set
   the 'wield' flag. Many similar obvious rules apply. Example of 4 values:

   If the <Item Type> == ITEM_CONTAINER then the values are interpeted as:

      Value[0]: Maximum weight the container can contain.
      Value[1]: Container flags:

        CLOSEABLE     - 1
        PICKPROOF     - 2
        CLOSED        - 4
        LOCKED        - 8

      Value[2]: The item-number of the object which can open the object.
                -1 means no lockability.
      Value[3]: Internal use for Corpses that must "rot".


<weight>[NL]
   The weight of the item in pounds.

<value>[NL]
   The value of the item if sold - see "defs.doc" for ideas on prices.

<cost/day><NL>
   The cost to store the item in the reception overnight.




Several extra descriptions or none at all may appear. They follow the room
format exactly.

'E'<NL>
<keyword-list>~<NL>
   Exactly as in rooms.

<extra description><NL>~<NL>
   Exactly as in rooms.



Between zero and six "affect's" may be set on an item. The affects could
for example modify a characters strength, height etc. The affect only goes
into affect when the character wear, wield or hold the item. The affect
is removed when the character removes the items.

'A'<NL>
   When items are worn using wear/wield/grab/hold commands, the 'A' will
   allow the items to affect a characters various abilities. Currently
   a maximum of 2 'A' are allowed.

<location>[NL]
   <location> is one of the below numbers, indicating which ability
   will be changed.

   APPLY_NONE              0  DO NOT USE.
   APPLY_STR               1
   APPLY_DEX               2
   APPLY_INT               3
   APPLY_WIS               4
   APPLY_CON               5
   APPLY_CHA               6  
   APPLY_CLASS             7  DO NOT USE.
   APPLY_LEVEL             8  DO NOT USE.
   APPLY_AGE               9
   APPLY_CHAR_WEIGHT      10
   APPLY_CHAR_HEIGHT      11
   APPLY_MANA             12  
   APPLY_HIT              13  The MAXIMUM number of hitpoints.
   APPLY_MOVE             14 
   APPLY_GOLD             15  DO NOT USE.
   APPLY_EXP              16  DO NOT USE.
   APPLY_AC               17
   APPLY_ARMOR            17  Same as APPLY_AC
   APPLY_HITROLL          18  The bonus/penalty to hit the opponent.
   APPLY_DAMROLL          19  The bouns/penalty to damage the opponent.
   APPLY_SAVING_PARA      20  These five are saving throws.
   APPLY_SAVING_ROD       21
   APPLY_SAVING_PETRI     22
   APPLY_SAVING_BREATH    23
   APPLY_SAVING_SPELL     24  This is the most used saving throw.
   APPLY_SNEAK		  25  Modifies SNEAK skill.
   APPLY_HIDE             26  Modifies HIDE skill.
   APPLY_RACE	          27  Sets RACE to given value.  values follow:
   APPLY_SEX		  28  Sets SEX to given value. values are in this doc
   APPLY_BACKSTAB	  29  Modifies BACKSTAB skill
   APPLY_PICK_LOCK        30
   APPLY_PUNCH            31
   APPLY_SHOOT            32
   APPLY_KICK             33

<modifier><NL>

   The modifier is added to the APPLY_XXX ability of the character
   when he uses an item, and is subtracted when he stops using it.
   Take great care when using this. This is an example of an item of
   improve strength and armour class. Example:

     A
     1 2
     A
     17 -2

   This adds +2 to the strength, and adds -2 to the AC (thus improving it).
   No more than 6 'A'ffects is allowed at this time.
   For APPLY_SEX and RACE, the modifier does not add.
   Races:
    	human=0, elf=1, dwarf=2, half-orc=3
 
The 'V' field sets affect FLAGS on a character using the item, like
invis and sanct.   Only one V may be used per item.

'V'
<aff_index>
   There are three affection arrays.  Indicate which array you are choosing
from.
<affection>
   The AFF_  from the chosen array.  This will be applied as long as the 
player is wearing the item.

-------------------------------------------------------------------------

Abbrevations:
=============

<contents> indicates that the contents MUST be entered.

[contents] indicates that the contents can OPTIONALLY be entered.

<NL> is Newline (return)

! This indicates "NOT" - for example <!NL> means NO newline (i.e. it is
  forbidden to use newline here).
